// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package net.bigeon.mcdas.aggregator.mqtt;

import java.io.IOException;

import org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;
import org.eclipse.paho.client.mqttv3.MqttCallback;
import org.eclipse.paho.client.mqttv3.MqttMessage;

import net.bigeon.mcdas.aggregator.SingleCache;
import net.bigeon.mcdas.cgmu.CGMUCacheMonitor;

/************************************************************/
/** A call back for MQTT messages. */
public class MQTTSource implements MqttCallback {

    private final CGMUCacheMonitor monitor;

    /** Create the callback
     *
     * @param monitor the multiple cache monitor. */
    public MQTTSource(CGMUCacheMonitor monitor) {
        super();
        this.monitor = monitor;
    }

    /* (non-Javadoc)
     * @see org.eclipse.paho.client.mqttv3.MqttCallback#connectionLost(java.lang.
     * Throwable) */
    @Override
    public void connectionLost(Throwable cause) {
        // Ignore

    }

    /* (non-Javadoc)
     * @see
     * org.eclipse.paho.client.mqttv3.MqttCallback#deliveryComplete(org.eclipse.paho
     * .client.mqttv3.IMqttDeliveryToken) */
    @Override
    public void deliveryComplete(IMqttDeliveryToken token) {
        // Ignore

    }

    /* (non-Javadoc)
     * @see
     * org.eclipse.paho.client.mqttv3.MqttCallback#messageArrived(java.lang.String,
     * org.eclipse.paho.client.mqttv3.MqttMessage) */
    @Override
    public void messageArrived(String topic, MqttMessage message) throws IOException {
        SingleCache cache = monitor.get(topic);
        if (cache != null) {
            cache.add(CGMUReader.read(message));
        }
    }
}
